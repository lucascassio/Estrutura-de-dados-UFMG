1-
Não foi possível identificar o erro visualmente.

2-
==10315== Memcheck, a memory error detector
==10315== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10315== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==10315== Command: ./teste
==10315== 
enter a number:
4
==10315== Invalid write of size 1
==10315==    at 0x48F9757: _IO_str_overflow (strops.c:133)
==10315==    by 0x48F7EB3: _IO_default_xsputn (genops.c:399)
==10315==    by 0x48F7EB3: _IO_default_xsputn (genops.c:370)
==10315==    by 0x48DF1CC: outstring_func (vfprintf-internal.c:239)
==10315==    by 0x48DF1CC: __vfprintf_internal (vfprintf-internal.c:1263)
==10315==    by 0x48EBA08: __vsprintf_internal (iovsprintf.c:95)
==10315==    by 0x48CA9A7: sprintf (sprintf.c:30)
==10315==    by 0x1092A5: printSum (c19.c:22)
==10315==    by 0x1092DD: main (c19.c:28)
==10315==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10315== 
==10315== 
==10315== Process terminating with default action of signal 11 (SIGSEGV)
==10315==  Access not within mapped region at address 0x0
==10315==    at 0x48F9757: _IO_str_overflow (strops.c:133)
==10315==    by 0x48F7EB3: _IO_default_xsputn (genops.c:399)
==10315==    by 0x48F7EB3: _IO_default_xsputn (genops.c:370)
==10315==    by 0x48DF1CC: outstring_func (vfprintf-internal.c:239)
==10315==    by 0x48DF1CC: __vfprintf_internal (vfprintf-internal.c:1263)
==10315==    by 0x48EBA08: __vsprintf_internal (iovsprintf.c:95)
==10315==    by 0x48CA9A7: sprintf (sprintf.c:30)
==10315==    by 0x1092A5: printSum (c19.c:22)
==10315==    by 0x1092DD: main (c19.c:28)
==10315==  If you believe this happened as a result of a stack
==10315==  overflow in your program's main thread (unlikely but
==10315==  possible), you can try to increase the size of the
==10315==  main thread stack using the --main-stacksize= flag.
==10315==  The main thread stack size used in this run was 8388608.
==10315== 
==10315== HEAP SUMMARY:
==10315==     in use at exit: 2,048 bytes in 2 blocks
==10315==   total heap usage: 2 allocs, 0 frees, 2,048 bytes allocated
==10315== 
==10315== LEAK SUMMARY:
==10315==    definitely lost: 0 bytes in 0 blocks
==10315==    indirectly lost: 0 bytes in 0 blocks
==10315==      possibly lost: 0 bytes in 0 blocks
==10315==    still reachable: 2,048 bytes in 2 blocks
==10315==         suppressed: 0 bytes in 0 blocks
==10315== Rerun with --leak-check=full to see details of leaked memory
==10315== 
==10315== For lists of detected and suppressed errors, rerun with: -s
==10315== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)

3-
Alocar memoria para buf resolveu o erro.

4-
==10415== Memcheck, a memory error detector
==10415== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10415== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==10415== Command: ./teste
==10415== 
enter a number:
5
sum=15
==10415== 
==10415== HEAP SUMMARY:
==10415==     in use at exit: 0 bytes in 0 blocks
==10415==   total heap usage: 3 allocs, 3 frees, 2,068 bytes allocated
==10415== 
==10415== All heap blocks were freed -- no leaks are possible
==10415== 
==10415== For lists of detected and suppressed errors, rerun with: -s
==10415== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)