1-
Não há nenhum erro de lógica no código, mas a memoria sendo alocada repetidamente dentro do for causa gasto inapropriado de memória.

2-
==6198== Memcheck, a memory error detector
==6198== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6198== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==6198== Command: ./teste
==6198== 
==6198== 
==6198== HEAP SUMMARY:
==6198==     in use at exit: 3,600 bytes in 9 blocks
==6198==   total heap usage: 10 allocs, 1 frees, 4,000 bytes allocated
==6198== 
==6198== LEAK SUMMARY:
==6198==    definitely lost: 3,600 bytes in 9 blocks
==6198==    indirectly lost: 0 bytes in 0 blocks
==6198==      possibly lost: 0 bytes in 0 blocks
==6198==    still reachable: 0 bytes in 0 blocks
==6198==         suppressed: 0 bytes in 0 blocks
==6198== Rerun with --leak-check=full to see details of leaked memory
==6198== 
==6198== For lists of detected and suppressed errors, rerun with: -s
==6198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

3-
Apenas removi a alocação de dentro do for.

4-
==6288== Memcheck, a memory error detector
==6288== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6288== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==6288== Command: ./teste
==6288== 
==6288== 
==6288== HEAP SUMMARY:
==6288==     in use at exit: 0 bytes in 0 blocks
==6288==   total heap usage: 1 allocs, 1 frees, 400 bytes allocated
==6288== 
==6288== All heap blocks were freed -- no leaks are possible
==6288== 
==6288== For lists of detected and suppressed errors, rerun with: -s
