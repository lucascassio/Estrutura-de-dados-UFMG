1- 
O Código tenta acessar a posicao x[10], mas isso é fora dos limites do array.

2-
==8296== Memcheck, a memory error detector
==8296== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8296== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8296== Command: ./teste
==8296== 
==8296== Invalid write of size 4
==8296==    at 0x10916B: f (c9.c:6)
==8296==    by 0x109180: main (c9.c:11)
==8296==  Address 0x4a95068 is 0 bytes after a block of size 40 alloc'd
==8296==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8296==    by 0x10915E: f (c9.c:5)
==8296==    by 0x109180: main (c9.c:11)
==8296== 
==8296== 
==8296== HEAP SUMMARY:
==8296==     in use at exit: 40 bytes in 1 blocks
==8296==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==8296== 
==8296== LEAK SUMMARY:
==8296==    definitely lost: 40 bytes in 1 blocks
==8296==    indirectly lost: 0 bytes in 0 blocks
==8296==      possibly lost: 0 bytes in 0 blocks
==8296==    still reachable: 0 bytes in 0 blocks
==8296==         suppressed: 0 bytes in 0 blocks
==8296== Rerun with --leak-check=full to see details of leaked memory
==8296== 
==8296== For lists of detected and suppressed errors, rerun with: -s
==8296== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

3- 
Foi corrigido para que o codigo acesse a posicao x[9];

4-
==8650== Memcheck, a memory error detector
==8650== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8650== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8650== Command: ./teste
==8650== 
==8650== 
==8650== HEAP SUMMARY:
==8650==     in use at exit: 0 bytes in 0 blocks
==8650==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==8650== 
==8650== All heap blocks were freed -- no leaks are possible
==8650== 
==8650== For lists of detected and suppressed errors, rerun with: -s
==8650== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)